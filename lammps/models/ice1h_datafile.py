from math import *
from .. import create
import numpy as np


# write the lammps data file for ice 1h phase 
# the coordinates are generated by module ice1h exist in the myPackage/tools/ folder
# argument list(by order):
#     1st: the oxygen-oxygen distance of o-o tedrahedral network
#     2nd: the oxygen-hydrogen bond length
#     3rd/4th/5th: duplicate number of unit cell in x/y/z direction
#     6th: optional argument. specify which direction you want a vapor-solid interface
def writefile(foutname,*argv,**kwargs):
    vapor_interface = kwargs.get('vapor_interface',False)
    ice = create.ice1h(*argv,**kwargs)
    N = argv[2]*argv[3]*argv[4]*8
    water,box_dimension = ice.create_ice1h()
    mass = np.array([16.0000,1.0008])
    q = np.array([-0.8476,0.4238])

    with open(foutname,'w') as f:
        f.write('Data file for SPC/E ideal disordered ice 1h config\n')
        f.write(str(N*3)+'  atoms   # number of atoms\n')
        f.write(str(N*2)+'  bonds   # number of bonds between atoms\n')
        f.write(str(N)+'  angles   # number of bond angles\n')
        f.write('\n')

        f.write("2  atom types     # number of atoms types\n")
        f.write("1  bond types    # number of bond types\n")
        f.write("1  angle types    # number of angle types\n")
        f.write("\n")

        f.write(str("%.4f" % box_dimension[0,0]) + " " + str("%.4f" % box_dimension[0,1]) + " xlo " + "xhi\n")
        f.write(str("%.4f" % box_dimension[1,0]) + " " + str("%.4f" % box_dimension[1,1]) + " ylo " + "yhi\n")
        f.write(str("%.4f" % box_dimension[2,0]) + " " + str("%.4f" % box_dimension[2,1]) + " zlo " + "zhi\n")

        f.write("\n")
        f.write("Masses\n\n")
        f.write(str(1).ljust(10)+"%.4f" % mass[0] + "\n")
        f.write(str(2).ljust(10)+"%.4f" % mass[1] + "\n")
        f.write("\n")

        f.write("Atoms\n\n")
        index_mol = 0
        for molecule in water:
            f.write(str(3*index_mol+1).ljust(10)+str(index_mol+1).ljust(10)+str(1).ljust(10)+str(q[0]).ljust(10)\
                   +("%.4f" % molecule[0,0]).ljust(15)+("%.4f" % molecule[0,1]).ljust(15)+("%.4f" % molecule[0,2]).ljust(15)+'\n')
            f.write(str(3*index_mol+2).ljust(10)+str(index_mol+1).ljust(10)+str(2).ljust(10)+str(q[1]).ljust(10)\
                   +("%.4f" % molecule[1,0]).ljust(15)+("%.4f" % molecule[1,1]).ljust(15)+("%.4f" % molecule[1,2]).ljust(15)+'\n')
            f.write(str(3*index_mol+3).ljust(10)+str(index_mol+1).ljust(10)+str(2).ljust(10)+str(q[1]).ljust(10)\
                   +("%.4f" % molecule[2,0]).ljust(15)+("%.4f" % molecule[2,1]).ljust(15)+("%.4f" % molecule[2,2]).ljust(15)+'\n')
            index_mol += 1
        f.write("\n")
        f.write("Bonds\n\n")
        for i in range(N):
            f.write(str(int(2*i+1)).ljust(10)+str(1).ljust(10)+str(i*3+1).ljust(10)+str(i*3+2).ljust(10)+"\n")
            f.write(str(int(2*i+2)).ljust(10)+str(1).ljust(10)+str(i*3+1).ljust(10)+str(i*3+3).ljust(10)+"\n")
        f.write("\n")
        f.write("Angles\n\n")
        for i in range(N):
            f.write(str(int(i+1)).ljust(10)+str(1).ljust(10)+str(i*3+2).ljust(10)+str(i*3+1).ljust(10)+str(i*3+3).ljust(10)+"\n")
        f.write("\n")
